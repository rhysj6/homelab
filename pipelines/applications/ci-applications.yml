pr:
  branches:
    include:
      - main
  paths:
    include:
      - applications/modules/**
      - applications/clusters/test/**

pool: Self hosted

variables:
- group: terraform

steps:
- script: |
    terraform init
    terraform plan -refresh=false -detailed-exitcode
    EXIT_CODE=$?
    echo "##vso[task.setvariable variable=TF_PLAN_EXIT_CODE_TEST]$EXIT_CODE"
  displayName: 'Terraform Init and Plan (no refresh)'
  workingDirectory: applications/clusters/test
  env:
    AWS_SECRET_ACCESS_KEY: $(SECRET_AWS_SECRET_ACCESS_KEY)
    AUTHENTIK_TOKEN: $(SECRET_AUTHENTIK_TOKEN)
    MINIO_USER: $(SECRET_MINIO_USER)
    MINIO_PASSWORD: $(SECRET_MINIO_PASSWORD)
    CLOUDFLARE_API_TOKEN: $(SECRET_CLOUDFLARE_API_TOKEN)
    RANCHER_TOKEN_KEY: $(SECRET_RANCHER_TOKEN_KEY)
    TF_VAR_cloudflare_api_key: $(SECRET_TF_VAR_cloudflare_api_key)

- task: GitHubComment@0
  displayName: 'Post Terraform Plan Changes Comment'
  inputs:
    gitHubConnection: 'rhysj6'
    comment: 'Detected changes for test cluster.'
  condition: eq(variables['TF_PLAN_EXIT_CODE_TEST'], '2')


- task: GitHubComment@0
  displayName: 'Post Terraform Plan No Changes Comment'
  inputs:
    gitHubConnection: 'rhysj6'
    comment: 'No changes detected for test cluster.'
  condition: eq(variables['TF_PLAN_EXIT_CODE_TEST'], '0')
- task: GitHubComment@0
  displayName: 'Post Terraform Plan Error Comment'
  inputs:
    gitHubConnection: 'rhysj6'
    comment: 'Error running terraform plan for test cluster.'
  condition: eq(variables['TF_PLAN_EXIT_CODE_TEST'], '1')