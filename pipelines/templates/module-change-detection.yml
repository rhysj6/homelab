parameters:
  - name: moduleName
    type: string
  - name: modulePath
    type: string
  - name: notify
    type: boolean
    default: true
  - name: comment
    type: string
  - name: env
    type: object
    default: {}

jobs:
- job: ModuleChangeDetection
  displayName: 'Module Change Detection: ${{ parameters.moduleName }}'
  steps:
    - script: |
        set -e
        terraform init
      displayName: 'Terraform Init'
      workingDirectory: ${{ parameters.modulePath }}
      env:
        AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
    - script: |
        terraform plan -input=false -refresh=false -detailed-exitcode || EXIT_CODE=$?
        if [ -z "$EXIT_CODE" ]; then EXIT_CODE=0; fi
        if [ "$EXIT_CODE" -eq 1 ]; then
          echo "Terraform plan failed with error code 1. Failing the pipeline."
          exit 1
        fi
        echo "##vso[task.setvariable variable=TF_PLAN_EXIT_CODE]$EXIT_CODE"
      displayName: 'Terraform Plan (no refresh)'
      workingDirectory: ${{ parameters.modulePath }}
      env:
        AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
        AUTHENTIK_TOKEN: $(AUTHENTIK_TOKEN)
        MINIO_PASSWORD: $(MINIO_PASSWORD)
        CLOUDFLARE_API_TOKEN: $(CLOUDFLARE_API_TOKEN)
        RANCHER_TOKEN_KEY: $(RANCHER_TOKEN_KEY)
        TF_VAR_domain: $(TF_VAR_domain)
        TF_VAR_secondary_domain: $(TF_VAR_secondary_domain)
        TF_VAR_windows_domain: $(TF_VAR_windows_domain)
        TF_VAR_cloudflare_email: $(TF_VAR_cloudflare_email)
        TF_VAR_cloudflare_api_key: $(TF_VAR_cloudflare_api_key)
        ${{ each key, value in parameters.env }}: # Include additional environment variables
          ${{ key }}: ${{ value }}
    - ${{ if and(parameters.notify, eq(variables['TF_PLAN_EXIT_CODE'], '2')) }}:
      - task: GitHubComment@0
        displayName: 'Post Terraform Plan Changes Comment'
        inputs:
          gitHubConnection: 'rhysj6'
          comment: ${{ parameters.comment }}
