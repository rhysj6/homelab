global:
  dnsService: rke2-coredns-rke2-coredns

loki:
  auth_enabled: false ## Disable the multitenancy
  schemaConfig:
    configs:
      - from: "2024-04-01"
        store: tsdb
        object_store: s3
        schema: v13
        index:
          prefix: loki_index_
          period: 24h
  pattern_ingester:
      enabled: true
  limits_config:
    allow_structured_metadata: true
    volume_enabled: true
    retention_period: 672h # 28 days retention
  querier:
    max_concurrent: 4

  storage:
    type: s3
    bucketNames:
        chunks: ${BUCKET_PREFIX}-chunks
        ruler: ${BUCKET_PREFIX}-ruler
        admin: ${BUCKET_PREFIX}-admin
    s3:
      # AWS endpoint URL
      endpoint: ${S3_ENDPOINT}
      # AWS secret access key
      secretAccessKey: ${S3_SECRET_ACCESS_KEY}
      # AWS access key ID
      accessKeyId: ${S3_ACCESS_KEY_ID}

deploymentMode: SimpleScalable

gateway:
  ingress:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: cert-manager
    hosts:
      - host: ${INGRESS_HOST}
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: loki-gateway-tls
        hosts:
          - ${INGRESS_HOST}
  basicAuth:
    enabled: true
    username: "${BASIC_AUTH_USERNAME}"
    password: "${BASIC_AUTH_PASSWORD}"


# Disable minio storage
minio:
  enabled: false

write:
  persistence:
    storageClass: longhorn-postgres ## Using this since it's a single replica
backend:
  persistence:
    storageClass: longhorn-postgres ## Using this since it's a single replica